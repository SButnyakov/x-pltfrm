version: "3"

networks:
  isolation-network:
    driver: bridge

services:
  upload:
    container_name: music_upload
    env_file:
      - ./.env
    build:
      context: ./backend/upload
      dockerfile: ./Dockerfile
    ports:
      - ${UPLOAD_HTTP_PORT}:${UPLOAD_HTTP_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - isolation-network
  postgres:
    image: postgres:16.0-bookworm
    restart: always
    container_name: music_db
    environment:
      POSTGRES_DB: ${MUSIC_PG_NAME}
      POSTGRES_USER: ${MUSIC_PG_USER}
      POSTGRES_PASSWORD: ${MUSIC_PG_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - pgvolume:/var/lib/postgresql/data
    ports:
      - ${MUSIC_PG_PORT}:${MUSIC_PG_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MUSIC_PG_USER} -d ${MUSIC_PG_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
        - isolation-network
  migrate:
    image: migrate/migrate
    entrypoint: ["sh", "-c", "migrate -path /migrations -database postgres://${MUSIC_PG_USER}:${MUSIC_PG_PASSWORD}@${MUSIC_PG_HOST}:${MUSIC_PG_PORT}/${MUSIC_PG_NAME}?sslmode=disable up"]
    volumes:
      - ./backend/db/postgres/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - isolation-network

volumes:
  pgvolume:
