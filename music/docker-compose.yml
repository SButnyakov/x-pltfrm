networks:
  isolation-network:
    driver: bridge

services:
  upload:
    container_name: music_upload
    env_file:
      - ./.env
    build:
      context: ./backend/upload
      dockerfile: ./Dockerfile
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    depends_on:
      - postgres
    networks:
      - isolation-network
  postgres:
    image: postgres:16.0-bookworm
    restart: always
    container_name: music_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - pgvolume:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
        - isolation-network
  migrate:
    image: migrate/migrate
    entrypoint: ["sh", "-c", "migrate -path /migrations -database postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable up"]
    volumes:
      - ./backend/db/postgres/migrations:/migrations
    depends_on:
      - postgres
    networks:
      - isolation-network

volumes:
  pgvolume:
